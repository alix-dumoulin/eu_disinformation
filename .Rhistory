shiny::runApp('Desktop/eu_disinformation/hackathon')
runApp()
runApp('Desktop/eu_disinformation/hackathon')
setwd("~/Desktop/eu_disinformation")
runApp('hackathon')
runApp('hackathon')
setwd("~/Desktop/eu_disinformation")
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
get_top_topics("Soutnik Arabic")
get_top_topics <- function(organisation) {
org <- organisation
org_id <- all_organizations$`@id`[all_organizations$name==org]
articles_by_org <- subset(all_news_articles, all_news_articles$author==org_id)
claim_by_org <- articles_by_org$claim
keywords <- c()
for (i in 1:length(claims)) {
if(claims[[i]][["@id"]] %in% claim_by_org) {
keywords <- c(keywords, claims[[i]][["keywords"]])
}
}
keywords_df <- as.data.frame(unlist(keywords))
org_keywords <- merge(all_keywords, keywords_df,
by.x = "@id",
by.y = "unlist(keywords)")
keywords_count_org <- org_keywords %>%
group_by(tolower(name)) %>%
count()
top_topics <- head(keywords_count_org[order(-keywords_count_org$n),], n = 10)
colnames(top_topics) <- c("Topic", "Total")
topics_plot <- ggplot(top_topics) +
geom_bar(aes(y=Total,
x=Topic),
stat="identity",
fill = rgb(0.1,0.4,0.5,0.7)) +
coord_flip() +
theme_minimal() +
ggtitle(paste0("Top Keywords for the organisation ", organisation)) +
xlab("Keywords") +
ylab("Frequency")
topics_plotly <- ggplotly(topics_plot)
topics_plotly
}
get_top_topics("Soutnik Arabic")
setwd("~/Desktop/eu_disinformation")
all_keywords <- read_csv("all_keywords.csv")
claims <- jsonlite::read_json("claims.json")
all_claim_reviews <- read_csv("all_claim_reviews.csv")
all_news_articles <- read_csv("all_news_articles.csv")
all_organizations <- read_csv("all_organisations.csv")
get_top_topics <- function(organisation) {
org <- organisation
org_id <- all_organizations$`@id`[all_organizations$name==org]
articles_by_org <- subset(all_news_articles, all_news_articles$author==org_id)
claim_by_org <- articles_by_org$claim
keywords <- c()
for (i in 1:length(claims)) {
if(claims[[i]][["@id"]] %in% claim_by_org) {
keywords <- c(keywords, claims[[i]][["keywords"]])
}
}
keywords_df <- as.data.frame(unlist(keywords))
org_keywords <- merge(all_keywords, keywords_df,
by.x = "@id",
by.y = "unlist(keywords)")
keywords_count_org <- org_keywords %>%
group_by(tolower(name)) %>%
count()
top_topics <- head(keywords_count_org[order(-keywords_count_org$n),], n = 10)
colnames(top_topics) <- c("Topic", "Total")
topics_plot <- ggplot(top_topics) +
geom_bar(aes(y=Total,
x=Topic),
stat="identity",
fill = rgb(0.1,0.4,0.5,0.7)) +
coord_flip() +
theme_minimal() +
ggtitle(paste0("Top Keywords for the organisation ", organisation)) +
xlab("Keywords") +
ylab("Frequency")
topics_plotly <- ggplotly(topics_plot)
topics_plotly
}
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
runApp('hackathon')
get_top_topics <- function(organisation) {
org <- organisation
org_id <- all_organizations$`@id`[all_organizations$name==org]
articles_by_org <- subset(all_news_articles, all_news_articles$author==org_id)
claim_by_org <- articles_by_org$claim
keywords <- c()
for (i in 1:length(claims)) {
if(claims[[i]][["@id"]] %in% claim_by_org) {
keywords <- c(keywords, claims[[i]][["keywords"]])
}
}
keywords_df <- as.data.frame(unlist(keywords))
org_keywords <- merge(all_keywords, keywords_df,
by.x = "@id",
by.y = "unlist(keywords)")
keywords_count_org <- org_keywords %>%
group_by(tolower(name)) %>%
count()
top_topics <- head(keywords_count_org[order(-keywords_count_org$n),], n = 10)
colnames(top_topics) <- c("Topic", "Total")
topics_plot <- ggplot(top_topics) +
geom_bar(aes(y=Total,
x=Topic),
stat="identity",
fill = rgb(0.1,0.4,0.5,0.7)) +
coord_flip() +
theme_minimal() +
ggtitle(paste0("Top Keywords for the organisation ", organisation)) +
xlab("Keywords") +
ylab("Frequency")
return(topics_plot)
}
get_top_topics("Sputnik Arabic")
get_top_topics <- function(organisation) {
org <- organisation
org_id <- all_organizations$`@id`[all_organizations$name==org]
articles_by_org <- subset(all_news_articles, all_news_articles$author==org_id)
claim_by_org <- articles_by_org$claim
keywords <- c()
for (i in 1:length(claims)) {
if(claims[[i]][["@id"]] %in% claim_by_org) {
keywords <- c(keywords, claims[[i]][["keywords"]])
}
}
keywords_df <- as.data.frame(unlist(keywords))
org_keywords <- merge(all_keywords, keywords_df,
by.x = "@id",
by.y = "unlist(keywords)")
keywords_count_org <- org_keywords %>%
group_by(tolower(name)) %>%
count()
top_topics <- head(keywords_count_org[order(-keywords_count_org$n),], n = 10)
colnames(top_topics) <- c("Topic", "Total")
topics_plot <- ggplot(top_topics) +
geom_bar(aes(y=Total,
x=Topic),
stat="identity",
fill = rgb(0.1,0.4,0.5,0.7)) +
coord_flip() +
theme_minimal() +
ggtitle(paste0("Top Keywords for the organisation ", organisation)) +
xlab("Keywords") +
ylab("Frequency")
topics_plotly <- ggplotly(topics_plot)
topics_plotly
}
get_top_topics("Sputnik Arabic")
get_top_topics <- function(organisation) {
org <- organisation
org_id <- all_organizations$`@id`[all_organizations$name==org]
articles_by_org <- subset(all_news_articles, all_news_articles$author==org_id)
claim_by_org <- articles_by_org$claim
keywords <- c()
for (i in 1:length(claims)) {
if(claims[[i]][["@id"]] %in% claim_by_org) {
keywords <- c(keywords, claims[[i]][["keywords"]])
}
}
keywords_df <- as.data.frame(unlist(keywords))
org_keywords <- merge(all_keywords, keywords_df,
by.x = "@id",
by.y = "unlist(keywords)")
keywords_count_org <- org_keywords %>%
group_by(tolower(name)) %>%
count()
top_topics <- head(keywords_count_org[order(-keywords_count_org$n),], n = 10)
colnames(top_topics) <- c("Topic", "Total")
topics_plot <- ggplot(top_topics) +
geom_bar(aes(y=Total,
x=Topic),
stat="identity",
fill = rgb(0.1,0.4,0.5,0.7)) +
coord_flip() +
theme_minimal() +
ggtitle(paste0("Top Keywords for the organisation ", organisation)) +
xlab("Keywords") +
ylab("Frequency")
topics_plotly <- ggplotly(topics_plot)
topics_plotly
}
get_top_topics("Sputnik Arabic")
get_top_topics <- function(organisation) {
org <- organisation
org_id <- all_organizations$`@id`[all_organizations$name==org]
articles_by_org <- subset(all_news_articles, all_news_articles$author==org_id)
claim_by_org <- articles_by_org$claim
keywords <- c()
for (i in 1:length(claims)) {
if(claims[[i]][["@id"]] %in% claim_by_org) {
keywords <- c(keywords, claims[[i]][["keywords"]])
}
}
keywords_df <- as.data.frame(unlist(keywords))
org_keywords <- merge(all_keywords, keywords_df,
by.x = "@id",
by.y = "unlist(keywords)")
keywords_count_org <- org_keywords %>%
group_by(tolower(name)) %>%
count()
top_topics <- head(keywords_count_org[order(-keywords_count_org$n),], n = 10)
colnames(top_topics) <- c("Topic", "Total")
topics_plot <- ggplot(top_topics) +
geom_bar(aes(y=Total,
x=Topic),
stat="identity",
fill = rgb(0.1,0.4,0.5,0.7)) +
coord_flip() +
theme_minimal() +
ggtitle(paste0("Top Keywords for the organisation ", organisation)) +
xlab("Keywords") +
ylab("Frequency")
topics_plotly <- ggplotly(topics_plot)
topics_plotly
}
get_top_topics("Sputnik Arabic")
all_keywords <- read_csv("all_keywords.csv")
claims <- jsonlite::read_json("claims.json")
all_claim_reviews <- read_csv("all_claim_reviews.csv")
get_top_topics <- function(organisation) {
org <- organisation
org_id <- all_organizations$`@id`[all_organizations$name==org]
articles_by_org <- subset(all_news_articles, all_news_articles$author==org_id)
claim_by_org <- articles_by_org$claim
keywords <- c()
for (i in 1:length(claims)) {
if(claims[[i]][["@id"]] %in% claim_by_org) {
keywords <- c(keywords, claims[[i]][["keywords"]])
}
}
keywords_df <- as.data.frame(unlist(keywords))
org_keywords <- merge(all_keywords, keywords_df,
by.x = "@id",
by.y = "unlist(keywords)")
keywords_count_org <- org_keywords %>%
group_by(tolower(name)) %>%
count()
top_topics <- head(keywords_count_org[order(-keywords_count_org$n),], n = 10)
colnames(top_topics) <- c("Topic", "Total")
topics_plot <- ggplot(top_topics) +
geom_bar(aes(y=Total,
x=Topic),
stat="identity",
fill = rgb(0.1,0.4,0.5,0.7)) +
coord_flip() +
theme_minimal() +
ggtitle(paste0("Top Keywords for the organisation ", organisation)) +
xlab("Keywords") +
ylab("Frequency")
topics_plotly <- ggplotly(topics_plot)
topics_plotly
}
get_top_topics("Sputnik Arabic")
get_total_articles <- function(organisation) {
org <- organisation
org_id <- all_organizations$`@id`[all_organizations$name==org]
articles_by_org <- subset(all_news_articles, all_news_articles$author==org_id)
length(articles_by_org$X1)
}
get_total_articles("Sputnik Arabic")
all_languages <- read_csv("all_languages.csv")
get_languages <- function(organisation) {
org <- organisation
org_id <- all_organizations$`@id`[all_organizations$name==org]
articles_by_org <- subset(all_news_articles, all_news_articles$author==org_id)
languages <- merge(articles_by_org, all_languages,
by.x = "inLanguage", by.y = "@id")
languages_count_org <- languages %>%
group_by(tolower(name.y)) %>%
count()
colnames(languages_count_org) <- c("Language", "Total")
language_plot <- ggplot(languages_count_org, aes(x="", y=Total, fill=Language)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
ggtitle(paste0("Languages of the articles from ", organisation)) +
theme_void() # remove background, grid, numeric labels
language_plot
}
get_languages("Sputnik Arabic")
